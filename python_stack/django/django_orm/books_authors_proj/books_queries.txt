Query: Create 5 books with the following names: C Sharp, Java, Python, PHP, Ruby

Commands
>>> csharp = Book.objects.create(title="C Sharp")
>>> java = Book.objects.create(title="Java")
>>> python = Book.objects.create(title="Python")
>>> php = Book.objects.create(title="PHP")
>>> ruby = Book.objects.create(title="Ruby")

Output
#	id	title	created_at	                updated_at	                desc
1	1	C Sharp	2020-08-13 18:02:56.942345	2020-08-13 18:02:56.942345	NULL
2	2	Java	2020-08-13 18:03:20.748682	2020-08-13 18:03:20.748682	NULL
3	3	Python	2020-08-13 18:03:32.795382	2020-08-13 18:03:32.795382	NULL
4	4	PHP	2020-08-13 18:03:47.894351	2020-08-13 18:03:47.894351	NULL
5	5	Ruby	2020-08-13 18:03:59.400989	2020-08-13 18:03:59.400989	NULL
---------------------------------------------------------------------
Query: Create 5 different authors: Jane Austen, Emily Dickinson, Fyodor Dostoevsky, William Shakespeare, Lau Tzu

Commands
>>> jane = Author.objects.create(first_name="Jane", last_name="Austen")
>>> emily = Author.objects.create(first_name="Emily", last_name="Dickinson")
>>> fyodor = Author.objects.create(first_name="Fyodor", last_name="Dostoevsky")
>>> william = Author.objects.create(first_name="William", last_name="Shakespeare")
>>> lau = Author.objects.create(first_name="Lau", last_name="Tzu")

Output
#	id	first_name	last_name	created_at			updated_at
1	1	Jane		Austen		2020-08-13 18:08:48.972658	2020-08-13 18:08:48.972658
2	3	Emily		Dickinson	2020-08-13 18:09:21.074162	2020-08-13 18:09:21.074162
3	4	Fyodor		Dostoevsky	2020-08-13 18:09:43.713236	2020-08-13 18:09:43.713236
4	5	William		Shakespeare	2020-08-13 18:10:12.311748	2020-08-13 18:10:12.311748
5	6	Lau		Tzu		2020-08-13 18:10:  32.462915	2020-08-13 18:10:32.462915
---------------------------------------------------------------------
Add a new text field in the authors table called 'notes'.
---------------------------------------------------------------------
Create and run the migration files to update the table in your database.
---------------------------------------------------------------------
Query: Change the name of the C Sharp book to C#

Commands
>>> csharp = Book.objects.get(id=1)
>>> csharp.title = "C#"
>>> print(csharp.title)

Output
C#
---------------------------------------------------------------------
Query: Change the first name of the 4th author to Bill

Commands
>>> william = Author.objects.get(id=5)
>>> william.first_name="Bill"
>>> print(william.first_name)

Output
Bill
---------------------------------------------------------------------
Query: Assign the first author to the first 2 books

Commands
>>> first_book = Book.objects.get(id=1)
>>> second_book = Book.objects.get(id=2)
>>> first_author = Author.objects.get(id=1)
>>> first_author.books.add(first_book)
>>> second_book.publishers.add(first_author)

Output
#	id	author_id	book_id
1	1	1	        1
2	2	1	        2
---------------------------------------------------------------------
Query: Assign the second author to the first 3 books

Commands
>>> second_author = Author.objects.get(id=3) 
>>> third_book = Book.objects.get(id=3)
>>> second_author.books.add(first_book)
>>> second_author.books.add(second_book) 
>>> second_author.books.add(third_book) 

Output
#	id	author_id	book_id
1	1	1	        1
2	2	1	        2
3	3	3	        1
4	4	3	        2
5	5	3	        3
---------------------------------------------------------------------
Query: Assign the third author to the first 4 books

Commands
>>> third_author = Author.objects.get(id=4)
>>> fourth_book = Book.objects.get(id=4)
>>> third_author.books.add(first_book)
>>> third_author.books.add(second_book) 
>>> third_author.books.add(third_book)  
>>> third_author.books.add(fourth_book) 

Output
#	id	author_id	book_id
...
...
6	6	4	        1
7	7	4	        2
8	8	4	        3
9	9	4	        4
---------------------------------------------------------------------
Query: Assign the fourth author to the first 5 books (or in other words, all the books)

Commands
>>> for book in Book.objects.all():    
...     fourth_author.books.add(book)

Output
#	id	author_id	book_id
...
...
10	10	5	        1
11	11	5	        2
12	12	5	        3
13	13	5	        4
14	14	5	        5
---------------------------------------------------------------------
Query: Retrieve all the authors for the 3rd book

Commands
third_book.publishers.all().values()

Output
<QuerySet [
    {'id': 3, 'first_name': 'Emily', 'last_name': 'Dickinson', 'created_at': datetime.datetime(2020, 8, 13, 18, 9, 21, 74162, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 13, 18, 9, 21, 74162, tzinfo=<UTC>)},
    {'id': 4, 'first_name': 'Fyodor', 'last_name': 'Dostoevsky', 'created_at': datetime.datetime(2020, 8, 13, 18, 9, 43, 713236, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 13, 18, 9, 43, 713236, tzinfo=<UTC>)},
    {'id': 5, 'first_name': 'William', 'last_name': 'Shakespeare', 'created_at': datetime.datetime(2020, 8, 13, 18, 10, 12, 311748, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 13, 18, 10, 12, 311748, tzinfo=<UTC>)}
    ]>
---------------------------------------------------------------------
Query: Remove the first author of the 3rd book

Commands
third_book.publishers.remove(third_book.publishers.first())
third_book.publishers.all().values()

Output
<QuerySet [
    {'id': 4, 'first_name': 'Fyodor', 'last_name': 'Dostoevsky', 'created_at': datetime.datetime(2020, 8, 13, 18, 9, 43, 713236, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 13, 18, 9, 43, 713236, tzinfo=<UTC>)},
    {'id': 5, 'first_name': 'William', 'last_name': 'Shakespeare', 'created_at': datetime.datetime(2020, 8, 13, 18, 10, 12, 311748, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 13, 18, 10, 12, 311748, tzinfo=<UTC>)}
    ]>
---------------------------------------------------------------------
Query: Add the 5th author as one of the authors of the 2nd book

Commands
>>> second_book.publishers.add(Author.objects.get(id=6))
>>> for author in second_book.publishers.all(): 
...     print(f"{author.first_name} {author.last_name}")

Output
Jane Austen
Emily Dickinson
Fyodor Dostoevsky
William Shakespeare
Lau Tzu
---------------------------------------------------------------------
Query: Find all the books that the 3rd author is part of

Commands
>>> for book in third_author.books.all():
...     print(book.title)

Output
C Sharp
Java
Python
PHP
---------------------------------------------------------------------
Query: Find all the authors that contributed to the 5th book

Commands
>>> for author in Book.objects.get(id=5).publishers.all():
...     print(f"{author.first_name} {author.last_name}")
	print(author.first_name + " " + author.last_name)

Output
William Shakespeare
